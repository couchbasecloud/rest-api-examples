
# -*- coding: utf-8 -*-

# Generic/Built-in

# Other Libs


import texttable as tt
import maya

# Owned
from cbcapi.cbc_api import cbc_api_get

__author__ = 'Jonathan Giffard'
__copyright__ = 'Copyright 2021, Couchbase'
__credits__ = ['Jonathan Giffard']
__license__ = 'MIT License'
__version__ = '0.1.0'
__maintainer__ = 'Jonathan Giffard'
__email__ = 'jonathan.giffard@couchbase.com'
__status__ = 'Dev'


def _pretty_table(table_heading, table_rows):
    # This creates a formatted table using texttable

    pretty_table = ''

    tab_tt = tt.Texttable(900)

    # Characters used for horizontal & vertical lines
    # You can have different horizontal line for the header if wanted

    tab_tt.set_chars(['-', '|', '-', '-'])

    tab_tt.add_rows([table_heading] + table_rows)

    pretty_table = tab_tt.draw()

    return pretty_table


def get_api_status():

    returned_api_status = None

    status_api_response = cbc_api_get('/v2/status')

    if status_api_response is not None:
        # API got called , check if we got something back
        if status_api_response['responseStatus'] is not None:
            returned_api_status = status_api_response['responseHTTPInfo']['httpMessage']

    return returned_api_status

def get_projects_from_api():

    projects_api_response = cbc_api_get('/v2/projects')

    project_list = []

    if projects_api_response['responseStatus'] is not None:
        list_of_projects = projects_api_response['responseContent']

        # Did we get a list?
        if list_of_projects is not None:
            for project in list_of_projects['data']:
                # Builds up a row to display in a table
                # Table is generated by _pretty_table
                # by whomever called this function
                project_list.append([project['name'], maya.parse(project['createdAt']), project['id']])

    return(project_list)


def list_projects():
    # Lists all projects showing the name, creation date and ID

    # Get a list of projects
    # which will be used as rows in the output table
    project_table_rows = get_projects_from_api()
    
    if len(project_table_rows) > 0:
        # We got data back
        # Table heading / rows for the output
        project_table_headings = ['Name', 'Created at', 'ID']

        print('Projects')
        print( _pretty_table(project_table_headings,project_table_rows))

    else:
        # We didn't get anything back
        print('Whoops something has gone wrong')
        print('Check environmental variables')


    return


def main():
    if get_api_status() == 'Success':
        list_projects()
    else:
        print('Whoops something has gone wrong')

if __name__ == '__main__':
        main()
